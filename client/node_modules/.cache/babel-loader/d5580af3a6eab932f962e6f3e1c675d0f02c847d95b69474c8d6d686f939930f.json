{"ast":null,"code":"var _jsxFileName = \"/Users/Elijah/Desktop/3dProject/client/src/order/order-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport orderService from \"./order-service\";\nimport dataService from \"../data/data-service\"; // Adjust the import according to your project structure\n\n// Define the shape for order credentials\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Default values for the order form\nconst DefaultOrderCredentials = {\n  desc: \"\",\n  processing: \"\",\n  adress: \"\",\n  file: null,\n  service: \"\"\n};\n\n// Define the shape for processing options (from your Data collection)\n\nexport default function OrderPage() {\n  _s();\n  // Retrieve the service id from the route parameters\n  const {\n    serviceId\n  } = useParams();\n\n  // Local state for the order form\n  const [orderData, setOrderData] = useState({\n    ...DefaultOrderCredentials,\n    service: serviceId || \"\"\n  });\n\n  // Local state for processing options\n  const [processingOptions, setProcessingOptions] = useState([]);\n\n  // Fetch processing options from the server\n  useEffect(() => {\n    async function fetchProcessings() {\n      try {\n        // Assuming dataService.getProcessings() returns an object like { processings: ProcessingOption[] }\n        const res = await dataService.getProcessings();\n        setProcessingOptions(res.processings);\n        if (res.processings.length > 0) {\n          setOrderData(prev => ({\n            ...prev,\n            processing: res.processings[0]._id\n          }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching processing options:\", error);\n      }\n    }\n    fetchProcessings();\n  }, []);\n\n  // Handle input changes for text fields and the dropdown\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOrderData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle file input changes\n  const handleFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setOrderData(prev => ({\n        ...prev,\n        file: e.target.files[0]\n      }));\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Prepare form data to send to the server\n    const formData = new FormData();\n    formData.append(\"desc\", orderData.desc);\n    formData.append(\"processing\", orderData.processing);\n    formData.append(\"adress\", orderData.adress);\n    formData.append(\"service\", orderData.service);\n    if (orderData.file) {\n      formData.append(\"file\", orderData.file);\n    }\n    try {\n      const res = await orderService.createOrder(formData);\n      console.log(\"Order created:\", res.data);\n      // Optionally, redirect to a confirmation page or display a success message here.\n    } catch (error) {\n      console.error(\"Order creation failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Order Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"desc\",\n            value: orderData.desc,\n            onChange: handleChange,\n            required: true,\n            style: {\n              width: \"100%\",\n              height: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Processing:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"processing\",\n            value: orderData.processing,\n            onChange: handleChange,\n            required: true,\n            style: {\n              marginLeft: \"0.5rem\"\n            },\n            children: processingOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option._id,\n              children: option.name\n            }, option._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Postal Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"adress\",\n            value: orderData.adress,\n            onChange: handleChange,\n            required: true,\n            style: {\n              width: \"100%\",\n              marginTop: \"0.5rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload 3D Model File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            onChange: handleFileChange,\n            accept: \".stl,.obj,.3mf,.jpg\",\n            required: true,\n            style: {\n              marginTop: \"0.5rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderPage, \"VCB9mN8qyz3cJZlRDf4Mb+zAwFU=\", false, function () {\n  return [useParams];\n});\n_c = OrderPage;\nvar _c;\n$RefreshReg$(_c, \"OrderPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","orderService","dataService","jsxDEV","_jsxDEV","DefaultOrderCredentials","desc","processing","adress","file","service","OrderPage","_s","serviceId","orderData","setOrderData","processingOptions","setProcessingOptions","fetchProcessings","res","getProcessings","processings","length","prev","_id","error","console","handleChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","formData","FormData","append","createOrder","log","data","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","marginBottom","onChange","required","width","height","marginLeft","map","option","type","marginTop","accept","_c","$RefreshReg$"],"sources":["/Users/Elijah/Desktop/3dProject/client/src/order/order-page.tsx"],"sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport orderService from \"./order-service\";\nimport dataService from \"../data/data-service\"; // Adjust the import according to your project structure\n\n// Define the shape for order credentials\ninterface OrderCredentials {\n  desc: string;\n  processing: string;  // Selected processing id from the dropdown\n  adress: string;\n  file: File | null;\n  service: string;     // Service id from route parameter\n}\n\n// Default values for the order form\nconst DefaultOrderCredentials: OrderCredentials = {\n  desc: \"\",\n  processing: \"\",\n  adress: \"\",\n  file: null,\n  service: \"\",\n};\n\n// Define the shape for processing options (from your Data collection)\ninterface ProcessingOption {\n  _id: string;\n  name: string;\n  desc: string;\n}\n\nexport default function OrderPage() {\n  // Retrieve the service id from the route parameters\n  const { serviceId } = useParams<{ serviceId: string }>();\n\n  // Local state for the order form\n  const [orderData, setOrderData] = useState<OrderCredentials>({\n    ...DefaultOrderCredentials,\n    service: serviceId || \"\",\n  });\n  \n  // Local state for processing options\n  const [processingOptions, setProcessingOptions] = useState<ProcessingOption[]>([]);\n\n  // Fetch processing options from the server\n  useEffect(() => {\n    async function fetchProcessings() {\n      try {\n        // Assuming dataService.getProcessings() returns an object like { processings: ProcessingOption[] }\n        const res = await dataService.getProcessings();\n        setProcessingOptions(res.processings);\n        if (res.processings.length > 0) {\n          setOrderData(prev => ({ ...prev, processing: res.processings[0]._id }));\n        }\n      } catch (error) {\n        console.error(\"Error fetching processing options:\", error);\n      }\n    }\n    fetchProcessings();\n  }, []);\n\n  // Handle input changes for text fields and the dropdown\n  const handleChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n  ) => {\n    const { name, value } = e.target;\n    setOrderData(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Handle file input changes\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setOrderData(prev => ({ ...prev, file: e.target.files[0] }));\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    // Prepare form data to send to the server\n    const formData = new FormData();\n    formData.append(\"desc\", orderData.desc);\n    formData.append(\"processing\", orderData.processing);\n    formData.append(\"adress\", orderData.adress);\n    formData.append(\"service\", orderData.service);\n    if (orderData.file) {\n      formData.append(\"file\", orderData.file);\n    }\n    try {\n      const res = await orderService.createOrder(formData);\n      console.log(\"Order created:\", res.data);\n      // Optionally, redirect to a confirmation page or display a success message here.\n    } catch (error) {\n      console.error(\"Order creation failed:\", error);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <h1>Order Service</h1>\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n        <div style={{ marginBottom: \"1rem\" }}>\n          <label>\n            Description:\n            <textarea\n              name=\"desc\"\n              value={orderData.desc}\n              onChange={handleChange}\n              required\n              style={{ width: \"100%\", height: \"100px\" }}\n            />\n          </label>\n        </div>\n        <div style={{ marginBottom: \"1rem\" }}>\n          <label>\n            Processing:\n            <select\n              name=\"processing\"\n              value={orderData.processing}\n              onChange={handleChange}\n              required\n              style={{ marginLeft: \"0.5rem\" }}\n            >\n              {processingOptions.map((option) => (\n                <option key={option._id} value={option._id}>\n                  {option.name}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n        <div style={{ marginBottom: \"1rem\" }}>\n          <label>\n            Postal Address:\n            <input\n              type=\"text\"\n              name=\"adress\"\n              value={orderData.adress}\n              onChange={handleChange}\n              required\n              style={{ width: \"100%\", marginTop: \"0.5rem\" }}\n            />\n          </label>\n        </div>\n        <div style={{ marginBottom: \"1rem\" }}>\n          <label>\n            Upload 3D Model File:\n            <input\n              type=\"file\"\n              name=\"file\"\n              onChange={handleFileChange}\n              accept=\".stl,.obj,.3mf,.jpg\"\n              required\n              style={{ marginTop: \"0.5rem\" }}\n            />\n          </label>\n        </div>\n        <button type=\"submit\">Place Order</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}