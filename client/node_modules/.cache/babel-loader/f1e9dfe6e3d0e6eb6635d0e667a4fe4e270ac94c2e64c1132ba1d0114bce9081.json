{"ast":null,"code":"import axios from 'axios';\n\n// Створюємо інстанс axios з базовою URL-адресою сервера\nconst api = axios.create({\n  baseURL: 'http://localhost:5001',\n  // URL сервера\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Додаємо інтерсептор для автоматичного додавання токена до запитів\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Отримуємо токен з localStorage\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`; // Додаємо токен в заголовок Authorization\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  if (error.response.status === 401) {\n    // Якщо сервер повертає 401 помилку, перенаправляємо на сторінку login\n    localStorage.removeItem('token'); // Очищаємо токен з localStorage\n    window.location.href = '/login?error=unauthorized'; // Перенаправляємо на сторінку входу з повідомленням\n  }\n  return Promise.reject(error);\n});\n\n// Експортуємо цей інстанс для використання в інших файлах\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href"],"sources":["/Users/Elijah/Desktop/3dProject/client/src/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Створюємо інстанс axios з базовою URL-адресою сервера\nconst api = axios.create({\n  baseURL: 'http://localhost:5001', // URL сервера\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Додаємо інтерсептор для автоматичного додавання токена до запитів\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token'); // Отримуємо токен з localStorage\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`; // Додаємо токен в заголовок Authorization\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response.status === 401) {\n      // Якщо сервер повертає 401 помилку, перенаправляємо на сторінку login\n      localStorage.removeItem('token');  // Очищаємо токен з localStorage\n      window.location.href = '/login?error=unauthorized';  // Перенаправляємо на сторінку входу з повідомленням\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Експортуємо цей інстанс для використання в інших файлах\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjC;IACAN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC,CAAC,CAAE;IACnCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,2BAA2B,CAAC,CAAE;EACvD;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}