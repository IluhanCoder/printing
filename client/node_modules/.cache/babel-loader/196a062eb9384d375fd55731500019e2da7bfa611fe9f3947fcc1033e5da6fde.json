{"ast":null,"code":"var _jsxFileName = \"/Users/Elijah/Desktop/3dProject/client/src/order/OrderStatusUpdate.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allowedStatuses = ['pending', 'accepted', 'payed', 'sent', 'recieved'];\nexport default function OrderStatusUpdate({\n  orderId,\n  currentStatus,\n  onStatusUpdated\n}) {\n  _s();\n  // We filter out the current status so that the user cannot reselect it.\n  const options = allowedStatuses.filter(status => status !== currentStatus);\n  const [selectedStatus, setSelectedStatus] = useState(options[0]);\n  const handleUpdate = async () => {\n    try {\n      const res = await api.patch(`/order/${orderId}/status`, {\n        status: selectedStatus\n      });\n      onStatusUpdated(res.data.order.status);\n    } catch (error) {\n      console.error(\"Error updating status\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Order Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      defaultValue: currentStatus,\n      value: selectedStatus,\n      onChange: e => setSelectedStatus(e.target.value),\n      children: options.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: status,\n        children: status\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Update Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(OrderStatusUpdate, \"Nc5iLORzOUqxuKwiaFgB3hMI3Lk=\");\n_c = OrderStatusUpdate;\nvar _c;\n$RefreshReg$(_c, \"OrderStatusUpdate\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","allowedStatuses","OrderStatusUpdate","orderId","currentStatus","onStatusUpdated","_s","options","filter","status","selectedStatus","setSelectedStatus","handleUpdate","res","patch","data","order","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","value","onChange","e","target","map","onClick","_c","$RefreshReg$"],"sources":["/Users/Elijah/Desktop/3dProject/client/src/order/OrderStatusUpdate.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport api from \"../api\";\n\ninterface OrderStatusUpdateProps {\n  orderId: string;\n  currentStatus: string;\n  onStatusUpdated: (newStatus: string) => void;\n}\n\nconst allowedStatuses = ['pending', 'accepted', 'payed', 'sent', 'recieved'];\n\nexport default function OrderStatusUpdate({\n  orderId,\n  currentStatus,\n  onStatusUpdated,\n}: OrderStatusUpdateProps) {\n  // We filter out the current status so that the user cannot reselect it.\n  const options = allowedStatuses.filter((status) => status !== currentStatus);\n  const [selectedStatus, setSelectedStatus] = useState(options[0]);\n\n  const handleUpdate = async () => {\n    try {\n      const res = await api.patch(`/order/${orderId}/status`, { status: selectedStatus });\n      onStatusUpdated(res.data.order.status);\n    } catch (error) {\n      console.error(\"Error updating status\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Update Order Status</h3>\n      <select defaultValue={currentStatus} value={selectedStatus} onChange={(e) => setSelectedStatus(e.target.value)}>\n        {options.map((status) => (\n          <option key={status} value={status}>\n            {status}\n          </option>\n        ))}\n      </select>\n      <button onClick={handleUpdate}>Update Status</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzB,MAAMC,eAAe,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC;AAE5E,eAAe,SAASC,iBAAiBA,CAAC;EACxCC,OAAO;EACPC,aAAa;EACbC;AACsB,CAAC,EAAE;EAAAC,EAAA;EACzB;EACA,MAAMC,OAAO,GAAGN,eAAe,CAACO,MAAM,CAAEC,MAAM,IAAKA,MAAM,KAAKL,aAAa,CAAC;EAC5E,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAACU,OAAO,CAAC,CAAC,CAAC,CAAC;EAEhE,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMf,GAAG,CAACgB,KAAK,CAAC,UAAUX,OAAO,SAAS,EAAE;QAAEM,MAAM,EAAEC;MAAe,CAAC,CAAC;MACnFL,eAAe,CAACQ,GAAG,CAACE,IAAI,CAACC,KAAK,CAACP,MAAM,CAAC;IACxC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BvB,OAAA;MAAQwB,YAAY,EAAEpB,aAAc;MAACqB,KAAK,EAAEf,cAAe;MAACgB,QAAQ,EAAGC,CAAC,IAAKhB,iBAAiB,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAN,QAAA,EAC5GZ,OAAO,CAACsB,GAAG,CAAEpB,MAAM,iBAClBT,OAAA;QAAqByB,KAAK,EAAEhB,MAAO;QAAAU,QAAA,EAChCV;MAAM,GADIA,MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTvB,OAAA;MAAQ8B,OAAO,EAAElB,YAAa;MAAAO,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACjB,EAAA,CA/BuBJ,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}