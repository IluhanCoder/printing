{"ast":null,"code":"import api from \"../api\";\nexport default new class ServiceService {\n  async createService(credentials) {\n    // Ensure that the required fields are provided\n    if (!credentials.technology || !credentials.material || credentials.images.length === 0) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', credentials.name);\n    formData.append('desc', credentials.desc);\n    // Append each image file\n    credentials.images.forEach(image => formData.append('images', image));\n    try {\n      return await api.post('/service', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    } catch (error) {\n      console.error(error);\n      alert('Failed to create service');\n    }\n  }\n}();","map":{"version":3,"names":["api","ServiceService","createService","credentials","technology","material","images","length","formData","FormData","append","name","desc","forEach","image","post","headers","error","console","alert"],"sources":["/Users/Elijah/Desktop/3dProject/client/src/service/service-service.ts"],"sourcesContent":["import api from \"../api\";\nimport { ServiceCredentials } from \"./service-types\";\n\nexport default new class ServiceService {\n  async createService (credentials: ServiceCredentials) {\n    // Ensure that the required fields are provided\n    if (!credentials.technology || !credentials.material || credentials.images.length === 0) {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', credentials.name);\n    formData.append('desc', credentials.desc);\n    // Append each image file\n    credentials.images.forEach(image => formData.append('images', image));\n\n    try {\n      return await api.post('/service', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n    } catch (error) {\n      console.error(error);\n      alert('Failed to create service');\n    }\n  }\n}();\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,QAAQ;AAGxB,eAAe,IAAI,MAAMC,cAAc,CAAC;EACtC,MAAMC,aAAaA,CAAEC,WAA+B,EAAE;IACpD;IACA,IAAI,CAACA,WAAW,CAACC,UAAU,IAAI,CAACD,WAAW,CAACE,QAAQ,IAAIF,WAAW,CAACG,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MACvF;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,WAAW,CAACQ,IAAI,CAAC;IACzCH,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,WAAW,CAACS,IAAI,CAAC;IACzC;IACAT,WAAW,CAACG,MAAM,CAACO,OAAO,CAACC,KAAK,IAAIN,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEI,KAAK,CAAC,CAAC;IAErE,IAAI;MACF,OAAO,MAAMd,GAAG,CAACe,IAAI,CAAC,UAAU,EAAEP,QAAQ,EAAE;QAC1CQ,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBE,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF;AACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}